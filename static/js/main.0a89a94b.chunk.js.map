{"version":3,"sources":["components/home.js","components/about.js","components/expertise.js","components/contacts.js","components/blog.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["Home","style","width","marginTop","className","col","src","process","alt","href","rel","target","aria-hidden","Component","About","Expertise","Contacts","Blog","Projects","Resume","Main","exact","path","component","App","background","transparent","title","to","scroll","value","onChange","label","expandable","expandableIcon","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0a89a94b.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Cell, Grid} from \"react-mdl\";\nimport { FaFacebook, FaTwitter, FaInstagram, FaGithub, FaLinkedin } from 'react-icons/fa';\nimport {FaChevronDown} from \"react-icons/fa\";\n\nclass Home extends Component {\n    render() {\n        return(\n            <div style={{width: '100%', marginTop: '4%'}}>\n                <Grid className='home-grid'>\n                    <Cell col={12}>\n                        <img src={process.env.PUBLIC_URL + '/images/profile.jpg'} alt='avatar' className='avatar-img'/>\n                        <div>\n                            <h1>Software Engineer</h1>\n\n                            <hr/>\n\n                            <p>Java | Python | Angular4 | React | Databases | DevOps | AWS</p>\n                            <div className='my-social-links'>\n                                <a href=\"https://www.facebook.com/carlo.butelli\"\n                                   rel='noopener noreferrer'\n                                   target='_blank'\n                                   aria-hidden=\"true\"\n                                >\n                                    <FaFacebook className=\"fab fa-facebook icon-circle-background\" />\n                                </a>\n                                <a href=\"https://twitter.com/e9512071d0c44f1\"\n                                   rel='noopener noreferrer'\n                                   target='_blank'\n                                >\n                                    <FaTwitter className=\"fab fa-twitter icon-circle-background\" />\n                                </a>\n                                <a href=\"https://www.instagram.com/carlobutelli/\"\n                                   rel='noopener noreferrer'\n                                   target='_blank'\n                                >\n                                    <FaInstagram className=\"fab fa-instagram icon-circle-background\" />\n                                </a>\n                                <a href=\"https://www.linkedin.com/in/carlo-butelli-281a29b7/\"\n                                   rel='noopener noreferrer'\n                                   target='_blank'\n                                >\n                                    <FaLinkedin className=\"fab fa-linkedin icon-circle-background\" />\n                                </a>\n                                <a href=\"https://github.com/butellicarlo\"\n                                   rel='noopener noreferrer'\n                                   target='_blank'\n                                >\n                                    <FaGithub className=\"fab fa-github icon-circle-background\" />\n                                </a>\n                            </div>\n                        </div>\n                    </Cell>\n                </Grid>\n                <div className=\"fa-chevron-down\">\n                    <FaChevronDown/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\n\nclass About extends Component {\n    render() {\n        return(\n            <div><h1>About Me Page</h1></div>\n        )\n    }\n}\n\nexport default About;\n","import React, { Component } from 'react'\n\nclass Expertise extends Component {\n    render() {\n        return(\n            <div><h1>Expertise Page</h1></div>\n        )\n    }\n}\n\nexport default Expertise;\n","import React, { Component } from 'react'\n\nclass Contacts extends Component {\n    render() {\n        return(\n            <div><h1>Contact Page</h1></div>\n        )\n    }\n}\n\nexport default Contacts;\n","import React, { Component } from 'react'\n\nclass Blog extends Component {\n    render() {\n        return(\n            <div><h1>Blog Page</h1></div>\n        )\n    }\n}\n\nexport default Blog;\n","import React, { Component } from 'react'\n\nclass Projects extends Component {\n    render() {\n        return(\n            <div><h1>Projects Page</h1></div>\n        )\n    }\n}\n\nexport default Projects;\n","import React, { Component } from 'react'\n\nclass Resume extends Component {\n    render() {\n        return(\n            <div><h1>Resume Page</h1></div>\n        )\n    }\n}\n\nexport default Resume;\n","import React from 'react'\nimport Home from \"./home\";\nimport {Route, Switch} from \"react-router-dom\";\nimport About from \"./about\";\nimport Expertise from \"./expertise\";\nimport Contacts from \"./contacts\";\nimport Blog from \"./blog\";\nimport Projects from \"./projects\";\nimport Resume from \"./resume\";\n\nconst Main = () => (\n    <Switch>\n        <Route exact path=\"/portfolio\" component={Home} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"/expertise\" component={Expertise} />\n        <Route path=\"/resume\" component={Resume} />\n        <Route path=\"/projects\" component={Projects} />\n        <Route path=\"/contacts\" component={Contacts} />\n        <Route path=\"/blog\" component={Blog} />\n    </Switch>\n);\n\nexport default Main;\n","import React from 'react';\nimport './App.css';\nimport {Content, Drawer, Header, Layout, Navigation, Textfield} from \"react-mdl\";\nimport Main from \"./components/main\";\nimport {Link} from \"react-router-dom\";\n\nfunction App() {\n  return (\n      <div>\n          <Layout style={{background: 'url(images/img_13_bg.jpg) center / cover'}}>\n              <Header transparent title={<span><Link className='my-logo' to=\"/portfolio\">Carlo Butelli</Link></span>} scroll>\n                  <Navigation>\n                      <Link to=\"/about\">About Me</Link>\n                      <Link to=\"/expertise\">Expertise</Link>\n                      <Link to=\"/resume\">Resume</Link>\n                      <Link to=\"/projects\">Projects</Link>\n                      <Link to=\"/contacts\">Contacts</Link>\n                      <Link to=\"/blog\">Blog</Link>\n                  </Navigation>\n                  <div className=\"header-icons-divider\" />\n                  <Textfield\n                      value=\"\"\n                      onChange={() => {}}\n                      label=\"Search\"\n                      expandable\n                      expandableIcon=\"search\"\n                  />\n              </Header>\n              <Drawer title={<span><Link className='my-logo' to=\"/portfolio\">Carlo Butelli</Link></span>}>\n                  <Navigation>\n                      <Link to=\"/about\">About Me</Link>\n                      <Link to=\"/expertise\">Expertise</Link>\n                      <Link to=\"/resume\">Resume</Link>\n                      <Link to=\"/projects\">Projects</Link>\n                      <Link to=\"/contacts\">Contacts</Link>\n                      <Link to=\"/blog\">Blog</Link>\n                  </Navigation>\n              </Drawer>\n              <Content>\n                  <div className=\"page-content\">\n                      <Main />\n                  </div>\n              </Content>\n          </Layout>\n      </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}